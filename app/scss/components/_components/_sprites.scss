/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-flickr: (0px, 31px, 0px, -31px, 16px, 16px, 90px, 47px, '../img/sprites.png', 's-Flickr', );
$s-instagram: (16px, 31px, -16px, -31px, 16px, 16px, 90px, 47px, '../img/sprites.png', 's-instagram', );
$s-rss: (32px, 31px, -32px, -31px, 16px, 16px, 90px, 47px, '../img/sprites.png', 's-rss', );
$s-vimeo: (48px, 31px, -48px, -31px, 16px, 16px, 90px, 47px, '../img/sprites.png', 's-vimeo', );
$s-you-tube: (64px, 31px, -64px, -31px, 16px, 16px, 90px, 47px, '../img/sprites.png', 's-youTube', );
$s-twitter: (60px, 0px, -60px, 0px, 30px, 31px, 90px, 47px, '../img/sprites.png', 's-Twitter', );
$s-face-book: (0px, 0px, 0px, 0px, 30px, 31px, 90px, 47px, '../img/sprites.png', 's-faceBook', );
$s-google-plus: (30px, 0px, -30px, 0px, 30px, 31px, 90px, 47px, '../img/sprites.png', 's-googlePlus', );
$spritesheet-sprites: ($s-flickr, $s-instagram, $s-rss, $s-vimeo, $s-you-tube, $s-twitter, $s-face-book, $s-google-plus, );
$spritesheet: (90px, 47px, '../img/sprites.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
